<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Ros on 武装带你</title>
    <link>https://peitianyu.github.io/pty_blog.github.io/ros/</link>
    <description>Recent content in Ros on 武装带你</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hant</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Fri, 15 Oct 2021 16:20:39 +0800</lastBuildDate>
    
	<atom:link href="https://peitianyu.github.io/pty_blog.github.io/ros/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>ROS_Cmake模板</title>
      <link>https://peitianyu.github.io/pty_blog.github.io/ros/ros_cmake%E6%A8%A1%E6%9D%BF/</link>
      <pubDate>Fri, 15 Oct 2021 16:20:39 +0800</pubDate>
      
      <guid>https://peitianyu.github.io/pty_blog.github.io/ros/ros_cmake%E6%A8%A1%E6%9D%BF/</guid>
      <description>简易CmakeLists.txt cmake_minimum_required(VERSION 2.8.3)# 工程名project(hmi)# 支持编译add_compile_options(-std=c++11)# 查找包find_package(catkin REQUIRED COMPONENTS roscpp sensor_msgs pcl_ros perception_msgs )# catkin库catkin_package( INCLUDE_DIRS include CATKIN_DEPENDS roscpp sensor_msgs pcl_ros )# 头文件库include_directories( include ${catkin_INCLUDE_DIRS} )# 链接库文件夹link_directories(${PCL_LIBRARY_DIRS})# 生成执行文件add_executable(${PROJECT_NAME}_node src/hmi_node.cpp src/hmi_core.cpp)# 依赖包add_dependencies(${PROJECT_NAME}_node perception_msgs_generate_messages_cpp)# 链接库target_link_libraries(${PROJECT_NAME}_node ${catkin_LIBRARIES} ${PCL_LIBRARIES} )详细CmakeLists.txt cmake_minimum_required() #CMake的版本号project() #项目名称find_package() #找到编译需要的其他CMake/Catkin package catkin_python_setup() #catkin新加宏，打开catkin的Python Module的支持add_message_files() #catkin新加宏，添加自定义Message文件 add_service_files() #catkin新加宏，添加自定义Service文件 add_action_files() #catkin新加宏，添加自定义Action文件 generate_message() #catkin新加宏，生成不同语言版本的msg/srv/action接口 catkin_package() #catkin新加宏，生成当前package的cmake配置，供依赖本包的其他软件包调用 add_library() #生成库 add_executable() #生成可执行二进制文件add_dependencies() #定义目标文件依赖于其他目标文件，确保其他目标已被构建 target_link_libraries() #链接catkin_add_gtest() #catkin新加宏，生成测试install() #安装至本机对照实例 cmake_minimum_required(VERSION 3.</description>
    </item>
    
    <item>
      <title>ROS_安装</title>
      <link>https://peitianyu.github.io/pty_blog.github.io/ros/ros%E5%AE%89%E8%A3%85/</link>
      <pubDate>Tue, 12 Oct 2021 16:20:39 +0800</pubDate>
      
      <guid>https://peitianyu.github.io/pty_blog.github.io/ros/ros%E5%AE%89%E8%A3%85/</guid>
      <description>安装环境 Ubuntu18.04 ros-melodic-desktop-full 安装 vim /etc/apt/sources.list.d/ros-latest.list deb https://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ bionic main sudo apt-key adv --keyserver &amp;#39;hkp://keyserver.ubuntu.com:80&amp;#39; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654 sudo apt update sudo apt-get install ros-melodic-desktop-full # 初始化 sudo rosdep init rosdep update sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential sudo echo &amp;#34;source /opt/ros/melodic/setup.bash&amp;#34; &amp;gt;&amp;gt; ~/.bashrc source ~/.bashrc 一行代码安装ros（包含问题处理） wget http://fishros.com/install -O fishros &amp;amp;&amp;amp; sudo bash fishros 参考视频：
玩着游戏听着歌，就把ROS装好了！一行代码搞定系列！ (qq.com)
安装问题 rosdep init不成功
cd /etc sudo mkdir ros cd ros sudo mkdir rosdep cd rosdep sudo mkdir source.</description>
    </item>
    
  </channel>
</rss>