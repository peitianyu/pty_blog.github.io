<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>武装带你</title>
    <link>https://peitianyu.github.io/pty_blog.github.io/</link>
    <description>Recent content on 武装带你</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-hant</language>
    <copyright>This is a customized copyright.</copyright>
    <lastBuildDate>Fri, 15 Oct 2021 16:20:39 +0800</lastBuildDate>
    
        <atom:link href="https://peitianyu.github.io/pty_blog.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    
        <item>
        <title>make实用模板</title>
        <link>https://peitianyu.github.io/pty_blog.github.io/templete/%E5%AE%9E%E7%94%A8make%E6%A8%A1%E6%9D%BF/</link>
        <pubDate>Fri, 15 Oct 2021 16:20:39 +0800</pubDate>
        
        <guid>https://peitianyu.github.io/pty_blog.github.io/templete/%E5%AE%9E%E7%94%A8make%E6%A8%A1%E6%9D%BF/</guid>
        <description>武装带你 https://peitianyu.github.io/pty_blog.github.io/templete/%E5%AE%9E%E7%94%A8make%E6%A8%A1%E6%9D%BF/ -&lt;h3 id=&#34;make文件目录&#34;&gt;make文件目录&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;root@LAPTOP-49LFJ4NT:/root/make# tree
.
├── Makefile
├── conf.sh
├── main.cpp
└── shell.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;这里使用了shell脚本来实现对于make的编译，由于使用的是&lt;code&gt;wsl&lt;/code&gt;在windows下操作导致编码格式含有&lt;code&gt;\r\n&lt;/code&gt;，以此有两个shell脚本。&lt;/p&gt;
&lt;h4 id=&#34;confsh-实现对于make的编译与运行&#34;&gt;conf.sh 实现对于make的编译与运行&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;if&lt;/span&gt; [[ &lt;span style=&#34;color:#00688b&#34;&gt;$1&lt;/span&gt; == clean ]]; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;then&lt;/span&gt;
        make clean
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;elif&lt;/span&gt; [[ &lt;span style=&#34;color:#00688b&#34;&gt;$1&lt;/span&gt; == all ]]; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;then&lt;/span&gt;
        make clean &amp;amp;&amp;amp; make -j8 &amp;amp;&amp;amp; ./main
&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;else&lt;/span&gt;
        make -j8 &amp;amp;&amp;amp; ./main
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;shellsh-实现将confsh的dos编码转化为unix编码并执行&#34;&gt;shell.sh 实现将conf.sh的dos编码转化为unix编码，并执行&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#!/bin/bash
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt;dos2unix  conf.sh &amp;amp;&amp;amp; ./conf.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;makefile回自动捕捉符合cc编译&#34;&gt;Makefile回自动捕捉符合c/c++编译&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-makefile&#34; data-lang=&#34;makefile&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;#指定编译工具
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00688b&#34;&gt;CC&lt;/span&gt; = gcc
&lt;span style=&#34;color:#00688b&#34;&gt;CPP&lt;/span&gt; = g++
&lt;span style=&#34;color:#00688b&#34;&gt;LINK&lt;/span&gt; = g++

&lt;span style=&#34;color:#00688b&#34;&gt;LIBS&lt;/span&gt; = -lsqlite3 -lpthread
&lt;span style=&#34;color:#228b22&#34;&gt;#编译.so 必须添加 -fPIC 和 -shared 选项
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00688b&#34;&gt;CCFLAGS&lt;/span&gt; = -c -g -fPIC
&lt;span style=&#34;color:#00688b&#34;&gt;CPPFLAGS&lt;/span&gt; = -c -g -fPIC

&lt;span style=&#34;color:#228b22&#34;&gt;#期望得到的执行文件或动态库.so
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;#TARGET=libxx.so
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;&lt;span style=&#34;color:#00688b&#34;&gt;TARGET&lt;/span&gt;=main

&lt;span style=&#34;color:#00688b&#34;&gt;INCLUDES&lt;/span&gt; = -I. &lt;span style=&#34;color:#228b22&#34;&gt;#-I../../&lt;/span&gt;

&lt;span style=&#34;color:#00688b&#34;&gt;CPPFILES&lt;/span&gt; = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;wildcard *.cpp &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;#遍历得到当前目录及上层目录中的所有.cpp文件&lt;/span&gt;
&lt;span style=&#34;color:#00688b&#34;&gt;CFILES&lt;/span&gt; = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;wildcard *.c &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;#遍历得到当前目录及上层目录中的所有.c文件&lt;/span&gt;

&lt;span style=&#34;color:#00688b&#34;&gt;OBJFILE&lt;/span&gt; = &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;CFILES:.c=.o&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;CPPFILES:.cpp=.o&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#008b45&#34;&gt;all&lt;/span&gt;:&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#00688b&#34;&gt;TARGET&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#008b45&#34;&gt;$(TARGET)&lt;/span&gt;:&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;&lt;span style=&#34;color:#00688b&#34;&gt;OBJFILE&lt;/span&gt;&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;span style=&#34;color:#228b22&#34;&gt;# 编译得到 .so 文件用下面的代码
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;#   $(LINK) $^ $(LIBS) -Wall -fPIC -shared -o $@
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 编译得到可执行文件用下面的代码
&lt;/span&gt;&lt;span style=&#34;color:#228b22&#34;&gt;&lt;/span&gt;        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;LINK&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt; $^ &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;LIBS&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt; -Wall -O2 -o &lt;span style=&#34;color:#00688b&#34;&gt;$@&lt;/span&gt;

&lt;span style=&#34;color:#008b45&#34;&gt;%.o&lt;/span&gt;:%.c
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;CC&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt; -o &lt;span style=&#34;color:#00688b&#34;&gt;$@&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;CCFLAGS&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt; $&amp;lt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;INCLUDES&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#008b45&#34;&gt;%.o&lt;/span&gt;:%.cpp
        &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;CPP&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt; -o &lt;span style=&#34;color:#00688b&#34;&gt;$@&lt;/span&gt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;CPPFLAGS&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt; $&amp;lt; &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;INCLUDES&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt;

&lt;span style=&#34;color:#008b45&#34;&gt;clean&lt;/span&gt;:
        rm -rf &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;TARGET&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt;
        rm -rf &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;$(&lt;/span&gt;OBJFILE&lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;mainc&#34;&gt;main.c&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-c&#34; data-lang=&#34;c&#34;&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;#include&lt;/span&gt; &lt;span style=&#34;color:#1e889b&#34;&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;
&lt;/span&gt;&lt;span style=&#34;color:#1e889b&#34;&gt;&lt;/span&gt; 
&lt;span style=&#34;color:#00688b;font-weight:bold&#34;&gt;int&lt;/span&gt; &lt;span style=&#34;color:#008b45&#34;&gt;main&lt;/span&gt;()
{
    printf(&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;Hello, World! &lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;\n&lt;/span&gt;&lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;&lt;/span&gt;);
 
    &lt;span style=&#34;color:#8b008b;font-weight:bold&#34;&gt;return&lt;/span&gt; &lt;span style=&#34;color:#b452cd&#34;&gt;0&lt;/span&gt;;
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;运行&#34;&gt;运行&lt;/h4&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;./shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;- https://peitianyu.github.io/pty_blog.github.io/templete/%E5%AE%9E%E7%94%A8make%E6%A8%A1%E6%9D%BF/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>Ros安装</title>
        <link>https://peitianyu.github.io/pty_blog.github.io/ros/ros%E5%AE%89%E8%A3%85/</link>
        <pubDate>Tue, 12 Oct 2021 16:20:39 +0800</pubDate>
        
        <guid>https://peitianyu.github.io/pty_blog.github.io/ros/ros%E5%AE%89%E8%A3%85/</guid>
        <description>武装带你 https://peitianyu.github.io/pty_blog.github.io/ros/ros%E5%AE%89%E8%A3%85/ -&lt;h3 id=&#34;安装环境&#34;&gt;安装环境&lt;/h3&gt;
&lt;pre&gt;&lt;code&gt;Ubuntu18.04
ros-melodic-desktop-full
&lt;/code&gt;&lt;/pre&gt;&lt;h3 id=&#34;安装&#34;&gt;安装&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;vim /etc/apt/sources.list.d/ros-latest.list
deb https://mirrors.tuna.tsinghua.edu.cn/ros/ubuntu/ bionic main
sudo apt-key adv --keyserver &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#39;hkp://keyserver.ubuntu.com:80&amp;#39;&lt;/span&gt; --recv-key C1CF6E31E6BADE8868B172B4F42ED6FBAB17C654
sudo apt update
sudo apt-get install ros-melodic-desktop-full
&lt;span style=&#34;color:#228b22&#34;&gt;# 初始化&lt;/span&gt;
sudo rosdep init
rosdep update
sudo apt install python-rosinstall python-rosinstall-generator python-wstool build-essential
sudo &lt;span style=&#34;color:#658b00&#34;&gt;echo&lt;/span&gt; &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;source /opt/ros/melodic/setup.bash&amp;#34;&lt;/span&gt; &amp;gt;&amp;gt; ~/.bashrc
&lt;span style=&#34;color:#658b00&#34;&gt;source&lt;/span&gt; ~/.bashrc
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;一行代码安装ros包含问题处理&#34;&gt;一行代码安装ros（包含问题处理）&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;wget http://fishros.com/install -O fishros &amp;amp;&amp;amp; sudo bash fishros
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;参考视频：&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://mp.weixin.qq.com/s/8hTrKL0N5y9i6s9ujhp0UA&#34;&gt;玩着游戏听着歌，就把ROS装好了！一行代码搞定系列！ (qq.com)&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&#34;安装问题&#34;&gt;安装问题&lt;/h3&gt;
&lt;p&gt;&lt;code&gt;rosdep init&lt;/code&gt;不成功&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;F35T1IRK7GMOWQDIHN_L8.png&#34; alt=&#34;img&#34;&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;cd /etc
sudo mkdir ros
cd ros
sudo mkdir rosdep
cd rosdep
sudo mkdir source.list.d
cd source.list.d
sudo touch 20-default.list
sudo vim 20-default.list
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;#os-specific listings first
yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/osx-homebrew.yaml osx
 
#generic
yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/base.yaml
yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/python.yaml
yaml https://raw.githubusercontent.com/ros/rosdistro/master/rosdep/ruby.yaml
gbpdistro https://raw.githubusercontent.com/ros/rosdistro/master/releases/fuerte.yaml fuerte
 
#newer distributions (Groovy, Hydro, …) must not be listed anymore, they are being 
#fetched from the rosdistro index.yaml instead
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;code&gt;rosdep update&lt;/code&gt;问题&lt;/p&gt;
&lt;p&gt;首先调大执行时间，更改 &lt;code&gt;/usr/lib/python2.7/dist-packages/rosdep2/&lt;/code&gt;下的三个文件&lt;code&gt;sources_list.py&lt;/code&gt;、&lt;code&gt;gbpdistro_support.py&lt;/code&gt;、&lt;code&gt;rep3.py&lt;/code&gt;中的&lt;code&gt;DOWNLOAD_TIMEOUT = 15.0&lt;/code&gt;值，我一般直接改成999。  终端输入：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /usr/lib/python2.7/dist-packages/rosdep2/gbpdistro_support.py
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;修改&lt;code&gt;DOWNLOAD_TIMEOUT&lt;/code&gt;后，输入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;sudo nano /etc/hosts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;在最后一行加入&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;151.101.84.133  raw.githubusercontent.com
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;连上&lt;strong&gt;手机热点&lt;/strong&gt;，重新&lt;code&gt;rosdep update&lt;/code&gt;多次后，成功。&lt;/p&gt;
&lt;h3 id=&#34;卸载&#34;&gt;卸载&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;sudo apt-get autoremove --purge ros-melodic
&lt;span style=&#34;color:#228b22&#34;&gt;# 先卸载包&lt;/span&gt;
sudo apt-get purge ros-*
&lt;span style=&#34;color:#228b22&#34;&gt;# 然后删除依赖，配置&lt;/span&gt;
sudo apt-get autoremove
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;测试&#34;&gt;测试&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;mkdir -p ~/catkin_ws/src
&lt;span style=&#34;color:#658b00&#34;&gt;cd&lt;/span&gt; ~/catkin_ws/
catkin_make
&lt;span style=&#34;color:#658b00&#34;&gt;source&lt;/span&gt; devel/setup.bash
roscore
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;打开新窗口执行&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;rosrun turtlesim turtlesim_node
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;出现小乌龟则安装完成。&lt;/p&gt;
- https://peitianyu.github.io/pty_blog.github.io/ros/ros%E5%AE%89%E8%A3%85/ - This is a customized copyright.</description>
        </item>
    
    
    
        <item>
        <title>hugo_blog教程</title>
        <link>https://peitianyu.github.io/pty_blog.github.io/blog/hugo_blog%E6%95%99%E7%A8%8B/</link>
        <pubDate>Tue, 12 Oct 2021 10:49:31 +0800</pubDate>
        
        <guid>https://peitianyu.github.io/pty_blog.github.io/blog/hugo_blog%E6%95%99%E7%A8%8B/</guid>
        <description>武装带你 https://peitianyu.github.io/pty_blog.github.io/blog/hugo_blog%E6%95%99%E7%A8%8B/ -&lt;h3 id=&#34;git安装与配置&#34;&gt;git安装与配置&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# git安装&lt;/span&gt;
sudo apt update
sudo apt install git 
&lt;span style=&#34;color:#228b22&#34;&gt;#git配置&lt;/span&gt;
git config --global user.name &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;zoey&amp;#34;&lt;/span&gt;
git config --global user.email &lt;span style=&#34;color:#cd5555&#34;&gt;&amp;#34;zoey686@163.com&amp;#34;&lt;/span&gt;
&lt;span style=&#34;color:#228b22&#34;&gt;#查看设置用户名与密码&lt;/span&gt;
git config --list
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h3 id=&#34;hugo安装&#34;&gt;hugo安装&lt;/h3&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 安装&lt;/span&gt;
sudo apt install hugo
&lt;span style=&#34;color:#228b22&#34;&gt;# 查看&lt;/span&gt;
hugo --help
hugo version
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;h4 id=&#34;建立博客&#34;&gt;建立博客&lt;/h4&gt;
&lt;p&gt;新建git文件夹用以git模板等，并在文件夹下新建myblog，用来存放博客页面&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 新建git文件夹并git初始化&lt;/span&gt;
mkdir gitFile  
git init
&lt;span style=&#34;color:#228b22&#34;&gt;# 新建myblog文件夹用来存放博客页面&lt;/span&gt;
hugo new site myblog
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;myblog下面就会有以下几个文件夹自动生成&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&#34;center&#34;&gt;文件夹名&lt;/th&gt;
&lt;th align=&#34;center&#34;&gt;作用&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;archetypes&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;文章开头形式&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;content&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;内容&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;data&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;自定义模板&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;layouts&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;网页模板文件&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;static&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;存储图片一些其他的资源&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;themes&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;主题&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td align=&#34;center&#34;&gt;config.toml&lt;/td&gt;
&lt;td align=&#34;center&#34;&gt;配置文件&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;h4 id=&#34;设置主题&#34;&gt;设置主题&lt;/h4&gt;
&lt;p&gt;在（https://themes.gohugo.io/）中挑选主题,这里选择的是diary主题（&lt;a href=&#34;https://themes.gohugo.io/themes/hugo-theme-diary/&#34;&gt;Diary | Hugo Themes (gohugo.io)&lt;/a&gt;）&lt;/p&gt;
&lt;p&gt;例子：（&lt;a href=&#34;https://sunua.gitee.io/simonblog/&#34;&gt;浅蓝色 (gitee.io)&lt;/a&gt;）&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#228b22&#34;&gt;# 下载diary主题到themes文件夹下并重命名为diary&lt;/span&gt;
git submodule add https://github.com/AmazingRise/hugo-theme-diary.git themes/diary
&lt;span style=&#34;color:#228b22&#34;&gt;# 配置config.toml文件&lt;/span&gt;
nano config.toml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;pre&gt;&lt;code&gt;baseURL = &amp;quot;https://peitianyu.github.io/pty_blog.github.io&amp;quot;
DefaultContentLanguage = &amp;quot;zh&amp;quot; # Theme&#39;s display language, supports: en, fr, zh, zh-hant
languageCode = &amp;quot;zh-hant&amp;quot;
title = &amp;quot;武装带你&amp;quot;
copyright = &amp;quot;This is a customized copyright.&amp;quot;
theme = &amp;quot;diary&amp;quot;

[markup]
  [markup.highlight]
    codeFences = true
    guessSyntax = false
    hl_Lines = &amp;quot;&amp;quot;
    lineNoStart = 1
    lineNos = false
    lineNumbersInTable = true
    noClasses = true
    style = &amp;quot;perldoc&amp;quot;
    tabWidth = 4


enableOpenGraph = true
enableTwitterCards = true
title = &amp;quot;My Blog&amp;quot; 
description = &amp;quot;My HomePage Description&amp;quot;  

[taxonomies]
   ros = &amp;quot;Ros&amp;quot;
   blog = &amp;quot;Blog&amp;quot;

[[menu.main]]
url = &amp;quot;/blog&amp;quot;
name = &amp;quot;Blog&amp;quot;
weight = 1
[[menu.main]]
url = &amp;quot;/ros&amp;quot;
name = &amp;quot;Ros&amp;quot;
weight = 2
&lt;/code&gt;&lt;/pre&gt;&lt;h4 id=&#34;创建文章&#34;&gt;创建文章&lt;/h4&gt;
&lt;p&gt;默认主目录文章在content/post下&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 创建文章
hugo new post/my_first_blog.md
#创建文章在需要目录(Archive)下
hugo new posts/my_first_blog.md
cd content/post
nano my_first_blog.md
# 注意将draft参数改为false，否则跳过草稿文件，无法预览
&lt;/code&gt;&lt;/pre&gt;&lt;pre&gt;&lt;code&gt;---
title: &amp;quot;my_first_blog&amp;quot;
date: 2021-10-12T10:49:31+08:00
draft : false
---
文本内容
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;本地调试&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo server --theme=blackburn --buildDrafts
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;其中 &amp;ndash;theme 选项可以指定主题，–buildDrafts 包括标记为草稿
然后在浏览器里打开： &lt;a href=&#34;http://localhost:1313/&#34;&gt;http://localhost:1313&lt;/a&gt; 即可访问到你的博客&lt;/p&gt;
&lt;h4 id=&#34;部署到github&#34;&gt;部署到github&lt;/h4&gt;
&lt;p&gt;如果你需要部署在 GitHub Pages 上，首先在GitHub上创建一个Repository，命名为：&lt;code&gt;pty_blog.github.io&lt;/code&gt; （&lt;strong&gt;pty_blog替换为你的github用户名的小写&lt;/strong&gt;）&lt;/p&gt;
&lt;p&gt;进入仓库，点击&lt;strong&gt;Settings&lt;/strong&gt;进入，找到&lt;strong&gt;GitHub Pages&lt;/strong&gt;并点击&lt;strong&gt;Check it out here!&lt;/strong&gt;，配置&lt;strong&gt;Source&lt;/strong&gt;并&lt;strong&gt;save&lt;/strong&gt;，会发现绿色框中显现 &lt;code&gt;Your site is published at https://peitianyu.github.io/pty_blog.github.io/&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;此处https://peitianyu.github.io/pty_blog.github.io/就是我们的网址，也是config.toml文件中设置的网址，设置hugo登陆网址&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;hugo --theme=diary --buildDrafts --baseUrl=&amp;quot;https://peitianyu.github.io/pty_blog.github.io/&amp;quot;
&lt;/code&gt;&lt;/pre&gt;&lt;p&gt;&lt;strong&gt;注意&lt;/strong&gt;：这里的 &amp;ndash;baseUrl 一定是https://（Hugo中文文档里为http://），不然你部署后的博客会没有样式！&lt;/p&gt;
&lt;p&gt;可看到根目录下多出 /public文件夹出来，该文件夹的内容即Hugo生成的整个静态网站。然后继续在你的站点根目录执行git 命令，添加远程仓库。&lt;/p&gt;
&lt;div class=&#34;highlight&#34;&gt;&lt;pre style=&#34;background-color:#eed;-moz-tab-size:4;-o-tab-size:4;tab-size:4&#34;&gt;&lt;code class=&#34;language-shell&#34; data-lang=&#34;shell&#34;&gt;&lt;span style=&#34;color:#658b00&#34;&gt;cd&lt;/span&gt; public
git init
git remote add origin git@github.com:peitianyu/pty_blog.github.io.git
git add -A
git commit -m “first commit”
git push -u origin master
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;p&gt;然后浏览器里访问：https://peitianyu.github.io/pty_blog.github.io/即可看到刚刚搭建的博客。&lt;/p&gt;
&lt;p&gt;发布博客并更新：&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;# 新建博客markdown文件，并编辑博客内容(文件名为 **.md )
hugo new post/newBlog.md
# 生成静态页面
hugo --theme=diary --buildDrafts --baseUrl=&amp;quot;https://peitianyu.github.io/pty_blog.github.io/&amp;quot;
# 发布
cd public
git add .
git commit -m &amp;quot;new blog added&amp;quot;
git push origin master
&lt;/code&gt;&lt;/pre&gt;- https://peitianyu.github.io/pty_blog.github.io/blog/hugo_blog%E6%95%99%E7%A8%8B/ - This is a customized copyright.</description>
        </item>
    
    
  </channel>
</rss> 